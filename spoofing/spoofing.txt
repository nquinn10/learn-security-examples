Briefly explain the vulnerability and why the secure version prevents the vulnerability.
End points defined in server, specifically post ./sensitive input can be accessed by anyone. There
are no checks to see if call to post("sensitive") is legitamate

Any client can access post("/sensitive") if there is a session id
CRFS Attack  in mal-csrf.html cannot happen without session id
via this method - attacker is able to send valid session to server
Primary mechanism to carry out spoofing attack

Key concept - cookies automatically get sent with http request
All they had to do was trigger http request and session id was sent?

session management is not handled approapitely which could result in spoofing attack

Secure Version
1. secure.js -app.use(session(secret)  -  made sure secret signing session id is not hard coded
Take hash and compare with hash id - if they dont match, drop the request

we know session id will be set in cookie
need to make sure session cannot be read programmatically by malicious component
2.  - set httpOnly to true
3.  - sameSite true - session id from clint will only be send if ports match



Which CIA properties do you think Spoofing violates?